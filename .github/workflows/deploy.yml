name: CD - Deploy para produção

on:
  push:
    branches: [main]

jobs:

  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{secrets.EC2_USER}}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/repos/NutriDash
            git pull origin main

            echo "DB_HOST=${{ secrets.DB_HOST }}" > .env.prod
            echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env.prod
            echo "DB_USER=${{ secrets.DB_USER }}" >> .env.prod
            echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env.prod
            echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env.prod
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env.prod
            echo "SECRETJWT=${{ secrets.SECRETJWT }}" >> .env.prod
            echo "RABBITMQ_DEFAULT_USER=${{ secrets.RABBITMQ_DEFAULT_USER }}" >> .env.prod
            echo "RABBITMQ_DEFAULT_PASS=${{ secrets.RABBITMQ_DEFAULT_PASS }}" >> .env.prod
            echo "RABBITMQ_DEFAULT_VHOST=${{ secrets.RABBITMQ_DEFAULT_VHOST }}" >> .env.prod
            echo "RABBITMQ_DEFAULT_HOST=${{ secrets.RABBITMQ_DEFAULT_HOST }}" >> .env.prod
            echo "RABBITMQ_QUEUE_NAME=${{ secrets.RABBITMQ_QUEUE_NAME }}" >> .env.prod
            echo "RABBITMQ_EXCHANGE_NAME=${{ secrets.RABBITMQ_EXCHANGE_NAME }}" >> .env.prod
            echo "RABBITMQ_DEFAULT_PORT=${{ secrets.RABBITMQ_DEFAULT_PORT }}" >> .env.prod
            # Construindo DATABASE_URL e CELERY_BROKER_URL diretamente com as secrets
            echo "DATABASE_URL=postgresql://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@${{ secrets.DB_HOST }}:${{ secrets.DB_PORT }}/${{ secrets.DB_NAME }}" >> .env.prod
            echo "CELERY_BROKER_URL=amqp://${{ secrets.RABBITMQ_DEFAULT_USER }}:${{ secrets.RABBITMQ_DEFAULT_PASS }}@${{ secrets.RABBITMQ_DEFAULT_HOST }}:${{ secrets.RABBITMQ_DEFAULT_PORT }}//" >> .env.prod
            echo "RABBITMQ_EXCHANGE_TYPE=${{ secrets.RABBITMQ_EXCHANGE_TYPE }}" >> .env.prod

            docker-compose -f docker-compose.prod.yml --env-file .env.prod up -d --build
             
